# NOTE: COMMAND TO RUN SIMULATION
# julia -O3 -e "using Langevin; simulate(ARGS)" -- hmc_input.TOML

######################
## DEFINING LATTICE ##
######################

[lattice]

# number of dimensions
ndim = 1

# number of orbitals/sites per unit cell
norbits = 1

# define lattice vectors.
lattice_vectors = [[1.0,]] # second lattice vector

# define basis vectors
basis_vectors = [[0.0,]] # first basis vector

# size of lattice
L = 1

#############################
## DEFINING HOLSTEIN MODEL ##
#############################

[holstein]

# whether to initialize phonons from file
read_phonon_config = false

# filename to read phonon config from
phonon_config_file = "phonon_config.out"

# discretization
dtau = 0.1

# setting temperature
beta = 2.0

# define phonon frequency
[[holstein.omega]]
orbit  = [1] # which orbital types the omega value is applied to
val    = 1.0 # mean value used for parameter
stddev = 0.0 # (optional) standard deviation

# define electron-phonon coupling
[[holstein.lambda]]
orbit = [1]
val   = 1.0

# define chemical potential
[[holstein.mu]]
orbit = [1]
val   = -1.0

# define anharmonic term of form X^4
[[holstein.omega4]]
orbit  = [1]
val    = 0.0

################################################
## (OPTIONAL) TUNE DENSITY/CHEMICAL POTENTIAL ##
################################################

# [tune_density]

# # target density
# density = 1.0

# # what fraction of density history to use when updating chemical potential
# memory  = 0.75

# # minimum compresibillity value
# kappa_min = 0.1

###################################
## DEFINING FOURIER ACCELERATION ##
###################################

[[fourier_acceleration]]
omega_min = 0.0
omega_max = 10.0
mass      = 1.0

###################################
## HYBRID MONTE CARLO PARAMETERS ##
###################################

[hmc]

# Number of smaller timesteps to evolve Sbose by
num_multitimesteps = 10

# thermalization updates
burnin_updates = 5_000

# simulation updates
simulation_updates = 50_000

# The duration of trajectories used in Hybrid Monte Carlo.
trajectory_time = 1.0

# timestep size
dt = 0.1

# number of hybrid monte carlo updates between measurements being made
meas_freq = 1

# Partial momentum refresh parameter ie what fraction of the momentum is refreshed.
# For "standard" HMC set this value to 1.0 ie momentum is entirely refreshed before each trajectory.
# Requirement: 0 <= momentum_conservation_fraction < 1
momentum_conservation_fraction = 0.0

# construct an initial guess for solution to linear system based on previous solutions.
construct_guess = false

# whether to write a log file for HMC dynamics
log = false

# if writing a log file, whether to write status at every timestep (true)
# or just after a HMC update (false)
verbose = false

###########################
## SIMULATION PARAMETERS ##
###########################

[simulation]

# filepath to where to write data
filepath = "."

# name of folder for data to get dumped into
foldername = "holstein_hmc_single_site"

# number of times measurements will be written to file.
num_bins = 100

# whether to write final M matrix to file or not at end of simulation
write_M_matrix = false

# (optional) random number generator seed.
# random_seed = 904375938239483

##############################
## LINEAR SOLVER PARAMETERS ##
##############################

[solver]

# select linear solver algorithm to use.
# the options are "CG", "GMRES" and "BiCGStab"
type = "CG"

# tolerace used in iterative solvers
tol = 1e-5

# maximum iteration for iterative solver
maxiter = 10_000

# restart parameter for GMRES solver.
restart = 20

######################################
## (OPTIONAL) DEFINE PRECONDITIONER ##
######################################

[solver.preconditioner]

# size of krylov subspace used for arnoldi method
n = 20

# amount to buffer min/max eigenvalues by to bound spectrum
buf = 0.05

# preconditioner parameter
# this parameter is ignored unless use_preconditioner = true
c1 = 1.0

# preconditioner parameter
# this parameter is ignored unless use_preconditioner = true
c2 = 1.0

##################
## MEASUREMENTS ##
##################

[measurements]

# number of random vectors used to make stochastic measurements
num_random_vectors = 1

# Electron Green's Function Measurement
[measurements.Greens]
measure        = true # whether or not to measure the quantity
time_dependent = true # if measured, whether as equal time or unequal time measurement

# Phonon Green's function
[measurements.PhononGreens]
measure        = true
time_dependent = true

# Density-Desnity Correlation Function Measurement
[measurements.DenDen]
measure        = true
time_dependent = false

# Pair Green's Function Measurement
# Note 1: If the time depedent pair green's function is being
# measured than the S-Wave Susceptibility is also calcualted.
# Note 2: As a side note, it is probably only ever worth
# measuring the time depedent Pair Green's function.
[measurements.PairGreens]
measure        = true
time_dependent = true

# Bond-Bond correlation function
[measurements.BondBond]
measure        = false
time_dependent = false

# Current-Current correlation function
[measurements.CurrentCurrent]
measure        = false
time_dependent = false